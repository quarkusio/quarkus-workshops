<?xml version="1.0" encoding="UTF-8"?>
<!-- How to use this build file
Run -Dquickly to just generate a default doc with every flag enabled
Run -Dos=[linux|mac|windows|all] to generate a set of variants for a single OS. That should take around 10m.
The default build will take around 50m.
-->

<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.quarkus.workshop.super-heroes</groupId>
    <artifactId>docs</artifactId>
    <version>2.0</version>
    <packaging>pom</packaging>
    <name>Quarkus Workshop :: Docs</name>

    <properties>
        <version.asciidoctor.maven.plugin>2.2.4</version.asciidoctor.maven.plugin>
        <version.jruby>9.4.5.0</version.jruby>
        <version.asciidoctorj>2.5.10</version.asciidoctorj>
        <version.asciidoctorj.pdf>2.3.9</version.asciidoctorj.pdf>
        <version.asciidoctorj.diagram>2.2.13</version.asciidoctorj.diagram>
        <!-- If building docs locally and urls matter, set environment variables for these values -->
        <github.raw>https://raw.githubusercontent.com/${env.GITHUB_REPOSITORY}/${env.GITHUB_REF}/quarkus-workshop-super-heroes</github.raw>
        <github.repo>${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}</github.repo>
        <github.url>${github.repo}/tree/${env.GITHUB_REF}/quarkus-workshop-super-heroes</github.url>
        <base.url>${env.BASE_URL}</base.url>
        <github.issue>${github.repo}/issues</github.issue>
        <!-- Note! Any versions listed here should have a dummy dependency clause so dependabot manages the versions -->
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
        <quarkus.platform.version>3.15.0</quarkus.platform.version>
        <quarkus.pact.version>1.3.0</quarkus.pact.version>
        <semantic-kernel.version>0.2.11-alpha</semantic-kernel.version>
        <compiler-plugin.version>3.11.0</compiler-plugin.version>
        <surefire-plugin.version>3.2.2</surefire-plugin.version>
        <exec-plugin.version>3.4.1</exec-plugin.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <options.files.directory>${project.build.directory}/combinatorics</options.files.directory>
    </properties>

    <!-- These are here so dependabot manages them -->
    <dependencies>
        <!-- Yes, depending on a plugin is a bit unusual; it's so dependabot can manage it without affecting the docs build -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${compiler-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
        </dependency>
        <!-- Normal dependencies we want dependabot to apply updates to -->
        <dependency>
            <groupId>${quarkus.platform.group-id}</groupId>
            <artifactId>${quarkus.platform.artifact-id}</artifactId>
            <version>${quarkus.platform.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.microsoft.semantic-kernel</groupId>
            <artifactId>semantickernel-bom</artifactId>
            <version>${semantic-kernel.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.pact</groupId>
            <artifactId>quarkus-pact-consumer</artifactId>
            <version>${quarkus.pact.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.pact</groupId>
            <artifactId>quarkus-pact-provider</artifactId>
            <version>${quarkus.pact.version}</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${version.asciidoctor.maven.plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.jruby</groupId>
                            <artifactId>jruby</artifactId>
                            <version>${version.jruby}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj</artifactId>
                            <version>${version.asciidoctorj}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-pdf</artifactId>
                            <version>${version.asciidoctorj.pdf}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-diagram</artifactId>
                            <version>${version.asciidoctorj.diagram}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <requires>
                            <require>asciidoctor-diagram</require>
                        </requires>
                        <relativeBaseDir>true</relativeBaseDir>
                        <preserveDirectories>true</preserveDirectories>
                        <backend>html</backend>
                        <sourceDocumentName>spine.adoc</sourceDocumentName>
                        <attributes>
                            <!-- Allows access to remote files (e.g. code on external GitHub) -->
                            <allow-uri-read/>
                            <toc>left</toc>
                            <linkcss>false</linkcss>
                            <docinfo>shared</docinfo>
                            <icons>font</icons>
                            <toclevels>3</toclevels>
                            <plantDir>../plantuml</plantDir>
                            <github-raw>${github.raw}</github-raw>
                            <github-url>${github.url}</github-url>
                            <github-repo>${github.repo}</github-repo>
                            <github-issue>${github.issue}</github-issue>
                            <github-issue>${base.url}</github-issue>
                            <give-solution>true</give-solution>
                            <jdk-version>${maven.compiler.source}</jdk-version>
                            <!-- NOTE! Any version listed here should have an entry in the dependencies, so that dependabot keeps docs in sync with implementation -->
                            <graalvm-version>22.3</graalvm-version>
                            <maven-version>3.9.x</maven-version>
                            <quarkus-version>${quarkus.platform.version}</quarkus-version>
                            <compiler-plugin-version>${compiler-plugin.version}</compiler-plugin-version>
                            <surefire-plugin-version>${surefire-plugin.version}</surefire-plugin-version>
                            <quarkus-pact-version>${quarkus.pact.version}</quarkus-pact-version>
                            <semantic-kernel-version>${semantic-kernel.version}</semantic-kernel-version>
                        </attributes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>dev.jbang</groupId>
                <artifactId>jbang-maven-plugin</artifactId>
                <version>0.0.7</version>
                <executions>
                    <execution>
                        <id>run</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <script>src/resource-generation/qrcode.java</script>
                            <args>
                                <arg>${base.url}quarkus-workshops/super-heroes/</arg>
                                <arg>src/docs/asciidoc/images/qrcode.png</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>output-html-default</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/generated-asciidoc/
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/docs/asciidoc</directory>
                                    <filtering>false</filtering>
                                    <include>assets/**</include>
                                    <include>images/**</include>
                                    <!-- And add in the html configurator to the top-level -->
                                    <include>*html</include>
                                </resource>
                            </resources>
                            <attributes>
                                <options-file>default-options.adoc</options-file>
                                <imagesdir>images</imagesdir> <!-- I don't know why this has to be specified as one level above the plantuml dir, when they're siblings, but it does -->
                                <assetsdir>assets</assetsdir>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- So the combinatorics here do get a bit bonkers, but asciidoc is static, not dynamic, so *all* the variations have to be done at build time.
             There's no easy way to iterate over a matrix in maven apart from nesting invocations of a plugin that allows us to iterate over a one-dimensional list.
              That nests very deep and makes awful xml, so we're outsourcing to a shell script. -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>${exec-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${basedir}/src/resource-generation/generate-attribute-combinations.sh</executable>
                            <arguments>
                                <argument>${options.files.directory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.soebes.maven.plugins</groupId>
                <artifactId>iterator-maven-plugin</artifactId>
                <version>0.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>iterator</goal>
                        </goals>
                        <configuration>
                            <folder>${options.files.directory}</folder>
                            <pluginExecutors>
                                <pluginExecutor>
                                    <plugin>
                                        <groupId>com.soebes.maven.plugins</groupId>
                                        <artifactId>echo-maven-plugin</artifactId>
                                        <version>0.5.0</version>
                                    </plugin>
                                    <goal>echo</goal>
                                    <configuration>
                                        <echos>
                                            <echo>Generating asciidoc using options from @item@</echo>
                                        </echos>
                                    </configuration>
                                </pluginExecutor>
                                <pluginExecutor>
                                    <plugin>
                                        <groupId>org.asciidoctor</groupId>
                                        <artifactId>asciidoctor-maven-plugin</artifactId>
                                    </plugin>
                                    <goal>
                                        process-asciidoc
                                    </goal>
                                    <configuration>
                                        <outputDirectory>
                                            ${project.build.directory}/generated-asciidoc/variants/@item@
                                        </outputDirectory>
                                        <attributes>
                                            <options-file>${options.files.directory}/@item@/options.adoc</options-file>
                                            <diagram-cachedir>${project.build.directory}/generated-asciidoc/variants/</diagram-cachedir>
                                            <imagesdir>../../images</imagesdir>
                                            <assetsdir>../../assets</assetsdir>
                                        </attributes>
                                        <!-- Specify an empty resources set so that nothing gets copied by default in the sub-file folders. -->
                                        <resources>
                                            <resource>
                                                <directory>src/</directory>
                                                <exclude>**</exclude>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </pluginExecutor>
                            </pluginExecutors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>env-undefined</id>
            <activation>
                <property>
                    <name>!env.BASE_URL</name>
                </property>
            </activation>
            <properties>
                <base.url>http://quarkus.io/</base.url>
                <github.raw>https://raw.githubusercontent.com/quarkusio/quarkus-workshops/main/quarkus-workshop-super-heroes</github.raw>
                <github.repo>http://github.com/quarkusio/quarkus-workshops</github.repo>
            </properties>
        </profile>
        <!-- If an os is passed through as a system property, just use that instead of iterating over them all -->
        <profile>
            <id>specified-os</id>
            <activation>
                <property>
                    <name>os</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <version>${exec-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${basedir}/src/resource-generation/generate-attribute-combinations.sh</executable>
                                    <arguments>
                                        <argument>${options.files.directory}</argument>
                                        <argument>${os}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
